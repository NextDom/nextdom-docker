FROM debian:buster-slim as nextdom-base

MAINTAINER info@nextdom.com

ARG PHPVERdef
ENV PHPVER=${PHPVERdef:-php7.4}
ARG aptcacher

RUN echo "base param branch: ${BRANCH} / version: ${VERSION} / tarBall: ${TAR} / initSh: ${initSh} / phpVer: ${PHPVER} / apt-cache: ${aptcacher} / git url: ${URLGIT} "
RUN if [ ! -z ${aptcacher} ]; then echo "proxy set to ${aptcacher}" && \
    echo "Acquire::http::Proxy \"http://${aptcacher}:3142\";" >/etc/apt/apt.conf.d/01proxy && \
    echo "Acquire::https::Proxy \"http://${aptcacher}:3142\";" >>/etc/apt/apt.conf.d/01proxy && cat /etc/apt/apt.conf.d/01proxy ; fi;\
    apt-get update && apt-get install -y apt-transport-https apt-utils iputils-ping && \
    apt-get install -y lsb-release wget git apache2 php${PHPVER} php${PHPVER}-curl php${PHPVER}-mbstring apache2 apache2-utils libexpat1 \
    php${PHPVER} php${PHPVER}-curl php${PHPVER}-gd php${PHPVER}-imap php${PHPVER}-json php${PHPVER}-mysql \
    php${PHPVER}-xml php${PHPVER}-opcache php${PHPVER}-soap php${PHPVER}-xmlrpc libapache2-mod-php${PHPVER} php${PHPVER}-common \
    php${PHPVER}-dev php${PHPVER}-zip php${PHPVER}-ssh2 php${PHPVER}-mbstring php${PHPVER}-ldap iputils-ping php-xml php-zip \
    unzip python-jsmin wget supervisor mariadb-client ntp ca-certificates unzip curl sudo cron tar wget ntpdate htop iotop iftop \
    smbclient python python-pip software-properties-common libexpat1 ssl-cert # && \
#RUN    wget https://deb.nodesource.com/setup_14.x -O /tmp/nodeTmp && \
#    /bin/bash -x ./tmp/nodeTmp && \
RUN    if [ -f /etc/apt/apt.conf.d/01proxy]; then rm /etc/apt/apt.conf.d/01proxy; fi  && mkdir -p /usr/local/bin/  && \
    php -r "copy('http://getcomposer.org/installer', 'composer-setup.php');" && \
    php composer-setup.php --install-dir=/usr/local/bin --filename=composer; chmod +x /usr/local/bin/composer
#CMD [ "/bin/bash", "-c", "--" , "trap : TERM INT; sleep infinity & wait" ]


FROM nextdom-base AS builder

ARG initShdef
ENV initSh=${initShdef:-init.sh}
ARG POSTINST_DEBUG
ARG BRANCHdef
ENV BRANCH=${BRANCHdef:-master}
ARG VERSIONdef
ENV VERSION=${VERSIONdef:-}
ARG PHPVERdef
ENV PHPVER=${PHPVERdef:-php7.4}
ARG URLGITdef
ENV URLGIT=${URLGITdef:-noGitUrl}
ARG TARdef
ENV TAR=${TARdef:-none}
ARG aptcacher

RUN echo "builder param branch: ${BRANCH} / version: ${VERSION} / tarBall: ${TAR} / initSh: ${initSh} / phpVer: ${PHPVER} / git url: ${URLGIT} "

RUN if [ ! -z ${aptcacher} ]; then echo "Acquire::http::Proxy \"http://${aptcacher}:3142\";" >/etc/apt/apt.conf.d/01proxy ; \
    echo "Acquire::https::Proxy \"http://${aptcacher}:3142\";" >>/etc/apt/apt.conf.d/01proxy ; fi
WORKDIR /usr/share/nextdom/
COPY nextdom-core-${VERSION}.tar.gz /usr/share/nextdom/nextdom.tar.gz
RUN mkdir -p /usr/share/nextdom /var/www/html/ && \
    cd /usr/share/nextdom/ && \
    if [ "none" != "${TAR}" -a ! -f nextdom.tar.gz ]; then echo "dl tar + unzip"; wget -O nextdom.tar.gz ${TAR};ls -alH .;fi ;
    # if release version exists and not wanting a specific branch
RUN echo "Branch: ${BRANCH}; version: ${VERSION}"; \
    if [ -f nextdom.tar.gz ]; then if [ "${BRANCH}" != "master" ] || [ "${VERSION}" != ""  ]; then tar --strip-components=1 -zxvf nextdom.tar.gz ; fi;rm nextdom.tar.gz ;fi ;
RUN if [ "b" != "b${VERSION}" -a -z "$(ls -A .)" ]; then echo "cloning and checkouting tag: ${VERSION} / ${URLGIT}"; git clone --depth 1 -b master ${URLGIT} . ; git fetch --tags ; git checkout $VERSION;fi;
RUN if [ -n "${BRANCH}" -a -z "$(ls -A .)" ]; then echo "cloning and checkouting branch: ${BRANCH} / ${URLGIT}"; git clone --depth 1 -b ${BRANCH} ${URLGIT} . ; fi
RUN cd /usr/share/nextdom; if [  -z "$(ls -A .)" ]; then echo "cloning depot"; git clone --depth 1 -b ${BRANCH:-master} $URLGIT . ;fi;
RUN ls -alR && cat /usr/share/nextdom/assets/config/Nextdom_version
#temp correction
ADD apache/supervisord.conf /usr/share/nextdom/install/
ADD install_docker.sh /usr/share/nextdom/install/install_docker.sh
#prevent bugged install in gen_global.sh to crash while building
#RUN curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - && \
#    sudo apt-get install -y nodejs npm ruby-sass python-jsmin && \
#    node --version
#RUN /usr/local/bin/composer install -o --no-dev
RUN bash -x install/install_docker.sh

#FROM nextdom-base AS prod
#
#ARG aptcacher
#ARG initShdef
#ENV initSh=${initShdef:-init.sh}
#ARG POSTINST_DEBUG
#ARG BRANCHdef
#ENV BRANCH=${BRANCHdef:-master}
#ARG VERSIONdef
#ENV VERSION=${VERSIONdef:-}
#ARG PHPVERdef
#ENV PHPVER=${PHPVERdef:-php7.4}
#ARG URLGITdef
#ENV URLGIT=${URLGITdef:-noGitUrl}
#ARG PRODUCTIONdef
#ENV PRODUCTION=${PRODUCTIONdef:-"true"}
#
#ENV ROOT_PASSWORD TBD
#ENV APACHE_HTTP_PORT 80
#ENV APACHE_HTTPS_PORT 443
#ENV SSH_PORT 22
#ENV locale-gen fr_FR.UTF-8
#ENV DEBIAN_FRONTEND noninteractive
#ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE DontWarn
#ENV MYSQL_HOSTNAME notLocalhost
#ENV MYSQL_PORT 3306
#
#EXPOSE 80
#EXPOSE 443
#
#RUN echo "prod param branch: ${BRANCH} / version: ${VERSION} / tarBall: ${TAR} / initSh: ${initSh} / phpVer: ${PHPVER} / apt-cache: ${aptcacher} / git url: ${URLGIT}";
#RUN if [ -n ${aptcacher} ]; then echo "Acquire::http::Proxy \"http://${aptcacher}:3142\";" >/etc/apt/apt.conf.d/01proxy && \
#    echo "Acquire::https::Proxy \"http://${aptcacher}:3142\";" >>/etc/apt/apt.conf.d/01proxy ; fi
#RUN apt-get update && apt-get install -y at wget supervisor mariadb-client ntp ca-certificates unzip \
#    curl sudo cron tar wget ntpdate htop iotop iftop smbclient python python-pip \
#    software-properties-common libexpat1 ssl-cert apt-transport-https && apt upgrade -y
#
#COPY --from=builder /etc/php /etc/php
#COPY --from=builder /etc/cron.d /etc/cron.d
#COPY --from=builder /etc/apache2/ /etc/apache2
#COPY --from=builder /etc/nextdom/ /etc/nextdom
#COPY --from=builder /usr/local/bin/composer /usr/local/bin/composer
#COPY --chown=www-data:www-data --from=builder /var/lib/nextdom /var/lib/nextdom
#COPY --chown=www-data:www-data --from=builder /usr/share/nextdom /usr/share/nextdom
#
#RUN rm -Rf /var/www/html && ln -s "/usr/share/nextdom" "/var/www/html" \
# && cat /usr/share/nextdom/assets/config/Nextdom_version;\
# cat /usr/share/nextdom/core/config/Nextdom_version
#RUN echo "root:$ROOT_PASSWORD" | chpasswd ;
#RUN apt-get clean autoclean ; apt-get autoremove --yes ; \
# if [ -f /etc/apt/apt.conf.d/01proxy ]; then rm /etc/apt/apt.conf.d/01proxy ;fi; \
# rm -rf /var/lib/apt/lists/* ; \
# mkdir -p /var/log/supervisor -p /var/log/nextdom ; \
# update-rc.d apache2 remove; update-rc.d cron remove;exit 0
#
#ADD apache/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
#ADD apache/${initSh} /root/init.sh
#RUN echo "init: ${initSh}" \
#    && usermod -a -G dialout,tty www-data ; echo "www-data ALL=(ALL) NOPASSWD: ALL" | tee -a /etc/sudoers \
#    && a2enmod ssl rewrite && a2dissite 000-default default-ssl && a2ensite nextdom nextdom-ssl \
#    && chmod +x /root/init.sh #\
#   #&& cat /usr/share/nextdom/core/config/Nextdom_version
#WORKDIR /usr/share/nextdom/
#RUN git init . && git remote add origin https://github.com/NextDom/nextdom-core/
#
#ENTRYPOINT ["/root/init.sh"]